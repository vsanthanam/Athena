{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Athena provides interfaces that allow any Swift type to be easily represented as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" and to be initialized from a properly shaped "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" instance."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To make a Swift type encodable into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":", make it conform to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONEncodable"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To make a Swift type decodable from "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":", make it conform to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONDecodable"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONCodable"},{"type":"text","text":" typealias to declare conformance or type constraints to both protocols together."}]},{"type":"codeListing","syntax":"swift","code":["","import Athena","","struct Car: JSONCodable {","    ","    enum Make: String, JSONCodable {","        case vw","        case bmw","        case toyota","        case hyundai","        case stelantis","        case generalMotors","        case mercedesBenz","        case honda","    }","","    let model: String","","    let make: Make","","    let horsepower: Int","","    let year: Int","","    \/\/ MARK: - JSONEncodable","","    func toJSON() -> JSON {","        [","            \"make\": JSON(make),","            \"model\": JSON(model),","            \"horsepower\": JSON(horsepower),","            \"year\": JSON(year)","        ]","    }","","    \/\/ MARK: - JSONDecodable","","    init(json: JSON) throws {","        self.model = try json[\"model\"].decode()","        self.make = try json[\"make\"].decode()","        self.horsepower = try json[\"horsepower\"].decode()","        self.year = try json[\"year\"].decode()","    }","","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Athena contains default implementations of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONCodable"},{"type":"text","text":" for the following Swift types:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Bool"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Double"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"String"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"URL"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UUID"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Array where Element: JSONCodable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Set where Element: JSONCodable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Dictionary where Key == String, Element: JSONCodable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Optional where Wrapped: JSONCodable"}]}]}]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When implementing "},{"type":"codeVoice","code":"JSONCodable"},{"type":"text","text":" for your custom types, implement "},{"type":"codeVoice","code":"JSONCodable"},{"type":"text","text":" for your depedent types as well. This will make your implemention much cleaner, with the parent type invoking the encode & decode method of its children."}]}],"type":"aside","name":"Tip"},{"anchor":"Using-the-Compiler-to-Synthesize-Conformance","level":3,"type":"heading","text":"Using the Compiler to Synthesize Conformance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Athena can synthesize conformance to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONCodable"},{"type":"text","text":" if the compiler can synthesize conformance to "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" for the same type."}]},{"type":"codeListing","syntax":"swift","code":["struct MyType: Codable, JSONCodable {","    let value: String","    let entries: [String]","}"]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You should avoid doing this for types where you have implemented "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" conformance yourself. Use this method only for compiler synthesized implementations of "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":"."}]}],"type":"aside","name":"Important"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using this implementation, Athena will piggy back on the compiler synthesized implementation of "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" conformance and use it to implement conformance to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONCodable"},{"type":"text","text":"."}]},{"anchor":"Encoding--Decoding-Values","level":3,"type":"heading","text":"Encoding & Decoding Values"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The simplest way to encode a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONEncodable"},{"type":"text","text":" conforming type into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" value is to use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/init(_:)-3hvss"},{"type":"text","text":" initializer. For example:"}]},{"type":"codeListing","syntax":"swift","code":["let myInstance = MyType(value: \"SomeString\", entries: [\"Some\", \"Entries\"])","let encoded = JSON(myInstance)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also invoke the type’s "},{"type":"codeVoice","code":"toJSON()"},{"type":"text","text":" method:"}]},{"type":"codeListing","syntax":"swift","code":["let encoded = myInstance.toJSON()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The simplest way to decode a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONDecodable"},{"type":"text","text":" value from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" is to use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/decode(_:)"},{"type":"text","text":" instance method. For example:"}]},{"type":"codeListing","syntax":"swift","code":["let json = JSON( ... )","let decoded = try json.decode(MyType.self)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/decode(_:)"},{"type":"text","text":" method can infer its "},{"type":"codeVoice","code":"type"},{"type":"text","text":" argument from the type context of the call site:"}]},{"type":"codeListing","syntax":"swift","code":["let decoded: MyType = try json.decode()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also invoke the conforming type’s "},{"type":"codeVoice","code":"init(json:)"},{"type":"text","text":" initializer:"}]},{"type":"codeListing","syntax":"swift","code":["let decoded = try MyType(json: json)"]},{"anchor":"Decoding-a-Nested-JSON-Value","level":4,"type":"heading","text":"Decoding a Nested JSON Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can combine the standard "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/decode(_:)"},{"type":"text","text":" method with the regular subscripting process. For example, given the following JSON, using any of the identical subsequent options:"}]},{"type":"codeListing","syntax":"swift","code":["struct Entry: JSONDecodable {","    let title: String","    let message: String","}","","let json: JSON = [","    \"name\": \"Steve\"","    \"notableEntry\": [","        \"title\": \"Entry Title\",","        \"message\": \"Entry Message\"","    ]","]"]},{"type":"codeListing","syntax":"swift","code":["let entry = try json.value(for: \"notableEntry\").decode(Entry.self)"]},{"type":"codeListing","syntax":"swift","code":["let entry = try json[\"notableEntry\"].decode(Entry.self)"]},{"type":"codeListing","syntax":"swift","code":["let entry: Entry = try json[\"notableEntry\"].decode()"]},{"type":"codeListing","syntax":"swift","code":["let entry = try Entry(json: json[\"notableEntry\"])"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the type context expects an "},{"type":"codeVoice","code":"Optional where Wrapped: JSONDecodable"},{"type":"text","text":", you can drop the decode methods entirely and just use subscripts. Doing so will replace decoding errors with "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let entry: Entry? = json[\"notableEntry\"]"]},{"anchor":"Configuring-Encode--Decode-Operations","level":4,"type":"heading","text":"Configuring Encode \/ Decode Operations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need more control over the way a type is encoded or decoded, you can use the static interfaces from "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Encoder"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Decoder"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These APIs allow you to perform encoding & decoding operations asynchronously. For example:"}]},{"type":"codeListing","syntax":"swift","code":["let myInstance = MyType(value: \"SomeString\", entries: [\"Some\", \"Entries\"])","let encoded = await JSON.Encoder.encode(myInstance)","let decoded = try await JSON.Decoder.decode(MyType.self, from: encoded)"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/athena\/encodingdecoding"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Athena\/documentation\/Athena\/EncodingDecoding","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Encode & decode your custom Swift types to and from their JSON representations"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Encoding & Decoding between Swift Types and JSON","role":"article","modules":[{"name":"Athena"}]},"hierarchy":{"paths":[["doc:\/\/Athena\/documentation\/Athena"]]},"seeAlsoSections":[{"title":"Encoding & Decoding","identifiers":["doc:\/\/Athena\/documentation\/Athena\/JSON\/Encoder","doc:\/\/Athena\/documentation\/Athena\/JSON\/Decoder","doc:\/\/Athena\/documentation\/Athena\/JSONEncodable","doc:\/\/Athena\/documentation\/Athena\/JSONDecodable","doc:\/\/Athena\/documentation\/Athena\/JSONCodable"],"generated":true}],"references":{"doc://Athena/documentation/Athena":{"role":"collection","title":"Athena","abstract":[{"type":"text","text":"A JSON Swift Library"}],"identifier":"doc:\/\/Athena\/documentation\/Athena","kind":"symbol","type":"topic","url":"\/documentation\/athena"},"doc://Athena/documentation/Athena/JSON/Encoder":{"role":"symbol","title":"JSON.Encoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Encoder"}],"abstract":[{"type":"text","text":"A type used to encode "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONEncodable"},{"type":"text","text":" conforming types into their "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" representations"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Encoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Encoder"}],"url":"\/documentation\/athena\/json\/encoder"},"doc://Athena/documentation/Athena/JSONCodable":{"role":"symbol","title":"JSONCodable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONCodable"}],"abstract":[{"type":"text","text":"A type that can convert itself into and out of an external "},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" representation."}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONCodable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONCodable"}],"url":"\/documentation\/athena\/jsoncodable"},"doc://Athena/documentation/Athena/JSON/init(_:)-3hvss":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initialize a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" by encoding a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONEncodable"},{"type":"text","text":" type"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/init(_:)-3hvss","kind":"symbol","type":"topic","url":"\/documentation\/athena\/json\/init(_:)-3hvss"},"doc://Athena/documentation/Athena/JSON":{"role":"symbol","title":"JSON","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"abstract":[{"type":"text","text":"A Swift representation of a JSON object"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"url":"\/documentation\/athena\/json"},"doc://Athena/documentation/Athena/JSON/Decoder":{"role":"symbol","title":"JSON.Decoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decoder"}],"abstract":[{"type":"text","text":"A type used to decode "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONDecodable"},{"type":"text","text":"conforming types from their "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" representations"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Decoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Decoder"}],"url":"\/documentation\/athena\/json\/decoder"},"doc://Athena/documentation/Athena/JSONEncodable":{"role":"symbol","title":"JSONEncodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncodable"}],"abstract":[{"type":"text","text":"A type that can encode itself to an external "},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" representation."}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONEncodable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONEncodable"}],"url":"\/documentation\/athena\/jsonencodable"},"doc://Athena/documentation/Athena/JSONDecodable":{"role":"symbol","title":"JSONDecodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecodable"}],"abstract":[{"type":"text","text":"A type that can decode itself from an external "},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" representation."}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONDecodable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONDecodable"}],"url":"\/documentation\/athena\/jsondecodable"},"doc://Athena/documentation/Athena/JSON/decode(_:)":{"role":"symbol","title":"decode(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Decode the value into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONDecodable"},{"type":"text","text":" type"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/decode(_:)","kind":"symbol","type":"topic","url":"\/documentation\/athena\/json\/decode(_:)"}}}