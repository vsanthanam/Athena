{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Athena is a library for working with JSON objects in Swift. It is based largely on "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/bignerdranch\/Freddy"},{"type":"text","text":", an early Swift JSON library that is no longer maintained by its oritinal authors."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It contains the following APIs:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value type used to represent JSON objects in Swift."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Methods and protocols to easily create and mutate these value types."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Methods to deserialize UTF-8 encoded data or Swift Strings into the provided Swift representation."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Methods to serializing the Swift JSON representation into Swift strings or UTF-8 encoded data"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protocols and methods to support encoding and decoding other Swift Types to and from a JSON representation."}]}]}]},{"anchor":"Representing-JSON-in-Swift","level":3,"type":"heading","text":"Representing JSON in Swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A legal JSON value "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.rfc-editor.org\/rfc\/rfc8259"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An array: A comma separated list of other legal JSON values, enclosed with square brackets"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An object: A comma separated list of string keys and their JSON value members, enclosed with curly brackets"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A number: A numeric value represented in base 10 using decimal digits."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A string: A character sequence enclosed with quotation marks."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"One of three legal literal values: "},{"type":"codeVoice","code":"true"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"type":"text","text":", or "},{"type":"codeVoice","code":"null"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Because of these rules, an enumeration with associated types is an ideal way to model JSON objects in Swift:"}]},{"type":"codeListing","syntax":"swift","code":["enum JSON {","    case array([JSON])","    case object([String: JSON])","    case number(Number)","    case string(String)","    case literal(Literal)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given the following JSON:"}]},{"type":"codeListing","syntax":"json","code":["{","    \"first_name\": \"Steve\",","    \"last_name\": \"Jobs\",","    \"founded_apple\": true,","    \"patent_count\": 317","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You could use the enumeration to model the same data like this:"}]},{"type":"codeListing","syntax":"swift","code":["import Athena","","let steve = JSON.object(","    [","        \"first_name\": .string(\"Steve\"),","        \"last_name\": .string(\"Jobs\"),","        \"founded_apple\": .literal(.true),","        \"patent_count\": .number(.int(317))","    ]",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The enumeration is very explicit, but can lead to code that is both more cumbersome to write and more difficult to read when compared to standard JSON syntax."},{"type":"text","text":" "},{"type":"text","text":"To avoid these issues, you can initialize "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" using Swift literals:"}]},{"type":"codeListing","syntax":"swift","code":["import Athena","","let steve: JSON = [","    \"first_name\": \"Steve\",","    \"last_name\": \"Jobs\",","    \"founded_apple\": true,","    \"patent_count\": 317","]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information, see the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" symbol reference."}]},{"anchor":"Subscripting","level":3,"type":"heading","text":"Subscripting"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use integers or strings as subscripts to retrieve nested JSON values. For example:"}]},{"type":"codeListing","syntax":"swift","code":["let firstName: JSON = try steve.value(for: \"first_name\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also use Swiftâ€™s "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Subscripts.html"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let firstName = steve[\"first_name\"]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/Subscripting"},{"type":"text","text":"."}]},{"anchor":"Encoding--Decoding","level":3,"type":"heading","text":"Encoding & Decoding"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can easily add support for your custom swift types by adding conformance to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONEncodable"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONDecodable"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once implemented, you can create an instance of your type from valid "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" like this:"}]},{"type":"codeListing","syntax":"swift","code":["import Athena","","struct MyType: JSONCodable { ... }","","let firstInstance = MyType( ... )","let json = MyType.toJSON()","let secondInstsance = try MyType(json: json)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/EncodingDecoding"},{"type":"text","text":"."}]},{"anchor":"Serialzing--Deserializing","level":3,"type":"heading","text":"Serialzing & Deserializing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can easily serialize "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" data into Swift strings or UTF-8 encoded "},{"type":"codeVoice","code":"Data"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let string = try String(serializing: steve)","let data = try Data(serializing: steve)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Fore more information, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/Serializing"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/Deserializing"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/athena"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Athena\/documentation\/Athena","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A JSON Swift Library"}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Athena","title":"Athena","symbolKind":"module","role":"collection","modules":[{"name":"Athena"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Models","identifiers":["doc:\/\/Athena\/documentation\/Athena\/JSON","doc:\/\/Athena\/documentation\/Athena\/JSON\/Number","doc:\/\/Athena\/documentation\/Athena\/JSON\/Literal"]},{"title":"Subscripting","identifiers":["doc:\/\/Athena\/documentation\/Athena\/Subscripting","doc:\/\/Athena\/documentation\/Athena\/JSON\/Subscript","doc:\/\/Athena\/documentation\/Athena\/JSON\/Path","doc:\/\/Athena\/documentation\/Athena\/JSONSubscriptRepresentable"]},{"title":"Encoding & Decoding","identifiers":["doc:\/\/Athena\/documentation\/Athena\/EncodingDecoding","doc:\/\/Athena\/documentation\/Athena\/JSON\/Encoder","doc:\/\/Athena\/documentation\/Athena\/JSON\/Decoder","doc:\/\/Athena\/documentation\/Athena\/JSONEncodable","doc:\/\/Athena\/documentation\/Athena\/JSONDecodable","doc:\/\/Athena\/documentation\/Athena\/JSONCodable"]},{"title":"Serialization","identifiers":["doc:\/\/Athena\/documentation\/Athena\/Serializing","doc:\/\/Athena\/documentation\/Athena\/JSON\/Serializer","doc:\/\/Athena\/documentation\/Athena\/JSON\/Serializer\/Options"]},{"title":"Deserialization","identifiers":["doc:\/\/Athena\/documentation\/Athena\/Deserializing","doc:\/\/Athena\/documentation\/Athena\/JSON\/Deserializer","doc:\/\/Athena\/documentation\/Athena\/JSON\/Deserializer\/Options","doc:\/\/Athena\/documentation\/Athena\/JSON\/Deserializer\/EncodingDetector"]},{"title":"Errors","identifiers":["doc:\/\/Athena\/documentation\/Athena\/JSON\/Error"]},{"title":"Extended Modules","identifiers":["doc:\/\/Athena\/documentation\/Athena\/Foundation","doc:\/\/Athena\/documentation\/Athena\/Swift"]}],"references":{"doc://Athena/documentation/Athena/JSON/Number":{"role":"symbol","title":"JSON.Number","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Number"}],"abstract":[{"type":"text","text":"A Swift represention of a JSON number, either an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"Double"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Number","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Number"}],"url":"\/documentation\/athena\/json\/number"},"doc://Athena/documentation/Athena/Foundation":{"role":"collection","title":"Foundation","abstract":[],"identifier":"doc:\/\/Athena\/documentation\/Athena\/Foundation","kind":"symbol","type":"topic","url":"\/documentation\/athena\/foundation"},"https://github.com/bignerdranch/Freddy":{"title":"Freddy","titleInlineContent":[{"type":"text","text":"Freddy"}],"type":"link","identifier":"https:\/\/github.com\/bignerdranch\/Freddy","url":"https:\/\/github.com\/bignerdranch\/Freddy"},"https://www.rfc-editor.org/rfc/rfc8259":{"title":"must be one of the following","titleInlineContent":[{"type":"text","text":"must be one of the following"}],"type":"link","identifier":"https:\/\/www.rfc-editor.org\/rfc\/rfc8259","url":"https:\/\/www.rfc-editor.org\/rfc\/rfc8259"},"doc://Athena/documentation/Athena/Deserializing":{"role":"article","title":"Deserializing Data into JSON","abstract":[{"type":"text","text":"Parse UFT-8 encoded data into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/Deserializing","kind":"article","type":"topic","url":"\/documentation\/athena\/deserializing"},"doc://Athena/documentation/Athena/Serializing":{"role":"article","title":"Serializing JSON into Data","abstract":[{"type":"text","text":"Serialize "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" values into a Swift "},{"type":"codeVoice","code":"String"},{"type":"text","text":" or UTF-8 encoded "},{"type":"codeVoice","code":"Data"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/Serializing","kind":"article","type":"topic","url":"\/documentation\/athena\/serializing"},"doc://Athena/documentation/Athena/JSON/Error":{"role":"symbol","title":"JSON.Error","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"abstract":[{"type":"text","text":"An error produced when working with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" values with Athenas"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Error","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Error"}],"url":"\/documentation\/athena\/json\/error"},"doc://Athena/documentation/Athena/JSON/Deserializer/EncodingDetector":{"role":"symbol","title":"JSON.Deserializer.EncodingDetector","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodingDetector"}],"abstract":[{"type":"text","text":"A value type use to detect the string encoding of a provided data"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Deserializer\/EncodingDetector","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EncodingDetector"}],"url":"\/documentation\/athena\/json\/deserializer\/encodingdetector"},"doc://Athena/documentation/Athena/JSON/Encoder":{"role":"symbol","title":"JSON.Encoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Encoder"}],"abstract":[{"type":"text","text":"A type used to encode "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONEncodable"},{"type":"text","text":" conforming types into their "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" representations"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Encoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Encoder"}],"url":"\/documentation\/athena\/json\/encoder"},"doc://Athena/documentation/Athena/Swift":{"role":"collection","title":"Swift","abstract":[],"identifier":"doc:\/\/Athena\/documentation\/Athena\/Swift","kind":"symbol","type":"topic","url":"\/documentation\/athena\/swift"},"doc://Athena/documentation/Athena/JSONEncodable":{"role":"symbol","title":"JSONEncodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncodable"}],"abstract":[{"type":"text","text":"A type that can encode itself to an external "},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" representation."}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONEncodable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONEncodable"}],"url":"\/documentation\/athena\/jsonencodable"},"doc://Athena/documentation/Athena/JSON":{"role":"symbol","title":"JSON","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"abstract":[{"type":"text","text":"A Swift representation of a JSON object"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"url":"\/documentation\/athena\/json"},"doc://Athena/documentation/Athena/JSON/Subscript":{"role":"symbol","title":"JSON.Subscript","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Subscript"}],"abstract":[{"type":"text","text":"An enumeration representing a valid JSON subscript"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Subscript","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Subscript"}],"url":"\/documentation\/athena\/json\/subscript"},"doc://Athena/documentation/Athena/JSONSubscriptRepresentable":{"role":"symbol","title":"JSONSubscriptRepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSubscriptRepresentable"}],"abstract":[{"type":"text","text":"A protocol that represents a type that can be represented as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Subscript"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONSubscriptRepresentable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONSubscriptRepresentable"}],"url":"\/documentation\/athena\/jsonsubscriptrepresentable"},"doc://Athena/documentation/Athena/JSON/Serializer/Options":{"role":"symbol","title":"JSON.Serializer.Options","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Options"}],"abstract":[{"type":"text","text":"A bitmask used to provide customization options when using the static interface of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Serializer"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Serializer\/Options","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Options"}],"url":"\/documentation\/athena\/json\/serializer\/options"},"doc://Athena/documentation/Athena/JSON/Literal":{"role":"symbol","title":"JSON.Literal","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Literal"}],"abstract":[{"type":"text","text":"A Swift represention of a legal JSON literal â€” "},{"type":"codeVoice","code":"true"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"type":"text","text":", or "},{"type":"codeVoice","code":"null"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Literal","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Literal"}],"url":"\/documentation\/athena\/json\/literal"},"doc://Athena/documentation/Athena/JSON/Deserializer":{"role":"symbol","title":"JSON.Deserializer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deserializer"}],"abstract":[{"type":"text","text":"A type used to deserialze "},{"type":"codeVoice","code":"String"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Deserializer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Deserializer"}],"url":"\/documentation\/athena\/json\/deserializer"},"doc://Athena/documentation/Athena/EncodingDecoding":{"role":"article","title":"Encoding & Decoding between Swift Types and JSON","abstract":[{"type":"text","text":"Encode & decode your custom Swift types to and from their JSON representations"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/EncodingDecoding","kind":"article","type":"topic","url":"\/documentation\/athena\/encodingdecoding"},"doc://Athena/documentation/Athena":{"role":"collection","title":"Athena","abstract":[{"type":"text","text":"A JSON Swift Library"}],"identifier":"doc:\/\/Athena\/documentation\/Athena","kind":"symbol","type":"topic","url":"\/documentation\/athena"},"https://docs.swift.org/swift-book/LanguageGuide/Subscripts.html":{"title":"subscripting syntax","titleInlineContent":[{"type":"text","text":"subscripting syntax"}],"type":"link","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Subscripts.html","url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Subscripts.html"},"doc://Athena/documentation/Athena/JSON/Decoder":{"role":"symbol","title":"JSON.Decoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decoder"}],"abstract":[{"type":"text","text":"A type used to decode "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONDecodable"},{"type":"text","text":"conforming types from their "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" representations"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Decoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Decoder"}],"url":"\/documentation\/athena\/json\/decoder"},"doc://Athena/documentation/Athena/JSONCodable":{"role":"symbol","title":"JSONCodable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONCodable"}],"abstract":[{"type":"text","text":"A type that can convert itself into and out of an external "},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" representation."}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONCodable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONCodable"}],"url":"\/documentation\/athena\/jsoncodable"},"doc://Athena/documentation/Athena/JSON/Serializer":{"role":"symbol","title":"JSON.Serializer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Serializer"}],"abstract":[{"type":"text","text":"A static interface used to serialize "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" values into other types."}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Serializer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Serializer"}],"url":"\/documentation\/athena\/json\/serializer"},"doc://Athena/documentation/Athena/JSON/Deserializer/Options":{"role":"symbol","title":"JSON.Deserializer.Options","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Options"}],"abstract":[{"type":"text","text":"A bitmask used to provide customization options when using the static interface of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Deserializer"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Deserializer\/Options","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Options"}],"url":"\/documentation\/athena\/json\/deserializer\/options"},"doc://Athena/documentation/Athena/Subscripting":{"role":"article","title":"Working with Nested Values using Subscripts","abstract":[{"type":"text","text":"Get values out of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON"},{"type":"text","text":" using subscripts"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/Subscripting","kind":"article","type":"topic","url":"\/documentation\/athena\/subscripting"},"doc://Athena/documentation/Athena/JSONDecodable":{"role":"symbol","title":"JSONDecodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecodable"}],"abstract":[{"type":"text","text":"A type that can decode itself from an external "},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" representation."}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSONDecodable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONDecodable"}],"url":"\/documentation\/athena\/jsondecodable"},"doc://Athena/documentation/Athena/JSON/Path":{"role":"symbol","title":"JSON.Path","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Path"}],"abstract":[{"type":"text","text":"A typealias representing a JSON Path"}],"identifier":"doc:\/\/Athena\/documentation\/Athena\/JSON\/Path","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Path"}],"url":"\/documentation\/athena\/json\/path"}}}